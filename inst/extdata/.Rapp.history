mm
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))
my
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2)
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))
t1=m[m[,1]=="DDD_31515385",] # gender mis-matched#
t2=m[m[,1]=="DDD_31515314",] # gender mis-matched
matplot(t1[4],t1[2], pch="+", col="red", add=T, cex=1.5)#
matplot(t2[4],t2[2], pch="+", col="red", add=T, cex=1.5)
t1
my[,1]
my[169,]
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)
t2
which.min(abs(0.5-my[,1]))
t2=m[m[,1]=="DDD_31515314",]
t2
m
cbind(m[,1],my)
c = cbind(m[,1],my)
c[c[,1]=="DDD_31515314",]
which(c[,1]=="DDD_31515314")
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
set
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
plot(my[,1],my[,2])
plot(my[,3],my[,4])
36/3
plot(my[,3],my[,4])
my
plot(my[,1])
plot(my[,2])
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
plot(my[,3],my[,4])
plot(my[,1],my[,2])
par(mfrow=c(1,2))
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB")
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
all[1,]
m
my
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
abline(h=0.7)
abline(v=0.7)
my2 = my[order(my[,1]),]
color.scale
colour.scale
library(plotrix)
cc = color.scale(my[,1], c(0,1,1),c(1,0,0),c(0,1,1),color.spec="rgb")
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), col=cc)#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
my
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1), col=cc)
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
m
my=my2
#my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1), col=cc)
cc
m
s = as.numeric(m[,4]+m[,5])
s = as.numeric(m[,4])+as.numeric(m[,5])
s
my2 = cbind(my,s)
my2
my2=my2[complete.cases(my2),]
my=my2
#my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1), col=cc)
my=my[order(my[,5]),]
cc = color.scale(my[,5], c(0,1,1),c(1,0,0),c(0,1,1),color.spec="rgb")
#my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1), col=cc)
cc = color.scale(s, c(0,1,1),c(1,0,0),c(0,1,1),color.spec="rgb")
#my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1), col=cc)
cc
s=s[complete.cases(s),]
s=s[complete.cases(s)]
cc = color.scale(s, c(0,1,1),c(1,0,0),c(0,1,1),color.spec="rgb")
#my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1), col=cc)
mm = NULL#
mmm=NULL#
for(x in 1:length(m[,1])) {#
	m1 = mcon[mcon[,1]==m[x,1],2:3]#
	#m3 = con_syn[con_syn[,1]==m[x,1],2]#
	#m2 = c(m1, m[x,2])#
	#m4 = c(m3, men_syn[x,2])#
	mm=rbind(mm,m1)#
	mmm=rbind(mmm,m4)#
}#
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
plot(0)
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB")#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
plot(my[,3],my[,4], main="Count", xlab="ArrayA", ylab="ArrayB")#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
plot(my[,3],my[,4], main="Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
mm = NULL#
mmm=NULL#
for(x in 1:length(m[,1])) {#
	m1 = mcon[mcon[,1]==m[x,1],2:3]#
	#m3 = con_syn[con_syn[,1]==m[x,1],2]#
	#m2 = c(m1, m[x,2])#
	#m4 = c(m3, men_syn[x,2])#
	mm=rbind(mm,m1)#
	mmm=rbind(mmm,m4)#
}#
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
abline(h=0.75)
abline(v=0.75)
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
abline(h=0.75)
abline(v=0.75)
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
abline(h=0.7)
abline(v=0.7)
all[1,]
s
plot(s)
cc = color.scale(s, c(0,1,1),c(1,0,0),c(0,1,1),color.spec="rgb")
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1),col=cc)#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
cc
s
cc
cc = color.scale(s, c(0,1,1),c(1,0,1),c(0,1,1),color.spec="rgb")
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1),col=cc)#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
cc = color.scale(s, c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1),col=cc)#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
hist(s)
ss=seq(1,length(s),by=1)
cc = color.scale(ss, c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1),col=cc)#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
my=my[order(s),]
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1),col=cc)#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
abline(h=0.7)
abline(v=0.7)
#
plot((my[,1]+my[,2])/2, s, ylim=c(0,1), xlim=c(0,1),col=cc)#
my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
my
s = as.numeric(m[,4])+as.numeric(m[,5])
plot(my[,1],m[,4])
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))
plot(my[,1],m[,4])
plot(my[,1],my[,4])
plot(my[,1],my[,4], col=m[,4])
plot(my[,1],my[,4])
plot(my[,1],my[,3])
plot(my[,1],my[,3])
abline(h=0.7)
abline(v=0.7)
m[1,]
plot(my[,1],m[,5])
plot(my[,1],m[,5])
plot(my[,1],m[,4])
plot(my[,3],m[,4])
plot(my[,1],m[,4])
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB")#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
#my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
mm = NULL#
mmm=NULL#
for(x in 1:length(m[,1])) {#
	m1 = mcon[mcon[,1]==m[x,1],2:3]#
	#m3 = con_syn[con_syn[,1]==m[x,1],2]#
	#m2 = c(m1, m[x,2])#
	#m4 = c(m3, men_syn[x,2])#
	mm=rbind(mm,m1)#
	mmm=rbind(mmm,m4)#
}#
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
#my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
mm = NULL#
mmm=NULL#
for(x in 1:length(m[,1])) {#
	m1 = mcon[mcon[,1]==m[x,1],2:3]#
	#m3 = con_syn[con_syn[,1]==m[x,1],2]#
	#m2 = c(m1, m[x,2])#
	#m4 = c(m3, men_syn[x,2])#
	mm=rbind(mm,m1)#
	mmm=rbind(mmm,m4)#
}#
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
summary(my)
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.4 & my[,6]<0.4,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.3 & my[,6]<0.3,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.2 & my[,6]<0.2,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
my = cbind(m[,1], as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]),m[,1])#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
ss=1:5#
cc = color.scale(ss, c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")
plot(ss,col=cc)
ss=1:5#
cc = color.scale(ss, c(0,0,1),c(1,0,1),color.spec="rgb")
plot(ss,col=cc)
ss=1:5#
cc = color.scale(ss, c(1,1,1),c(1,0,1),color.spec="rgb")
plot(ss,col=cc)
ss=1:5#
cc = color.scale(ss, c(1,0,1),c(1,0,1),color.spec="rgb")
plot(ss,col=cc)
ss=1:5#
cc = color.scale(ss, c(1,1,0),c(1,0,1),color.spec="rgb")
plot(ss,col=cc)
ss=1:5#
cc = color.scale(ss, c(1,1,0),c(0,0,1),color.spec="rgb")
plot(ss,col=cc)
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]),m[,1])#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
#my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)#
#
ss=my[,5]+my[,6]#
ss[ss>0.5] = 5#
ss[ss>0.4 & ss <=1] = 4#
ss[ss>0.3 & ss <=1] = 3#
ss[ss>0.2 & ss <=1] = 2#
ss[ss>0.2 & ss <=1] = 1#
#
cc = color.scale(ss, c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
#my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)#
#
ss=my[,5]+my[,6]#
ss[ss>0.5] = 5#
ss[ss>0.4 & ss <=1] = 4#
ss[ss>0.3 & ss <=1] = 3#
ss[ss>0.2 & ss <=1] = 2#
ss[ss>0.2 & ss <=1] = 1#
#
cc = color.scale(ss, c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)
plot(0)
cc = color.scale(ss, c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)
cc = color.scale(ss, c(0,0,1),c(1,0,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
#my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
#my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)#
#
ss=my[,5]+my[,6]#
ss[ss>0.5] = 5#
ss[ss>0.4 & ss <=1] = 4#
ss[ss>0.3 & ss <=1] = 3#
ss[ss>0.2 & ss <=1] = 2#
ss[ss>0.2 & ss <=1] = 1#
#
cc = color.scale(ss, c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)
plot(0)
cc = color.scale(ss, c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=cc)
mm = NULL#
mmm=NULL#
for(x in 1:length(m[,1])) {#
	m1 = mcon[mcon[,1]==m[x,1],2:3]#
	#m3 = con_syn[con_syn[,1]==m[x,1],2]#
	#m2 = c(m1, m[x,2])#
	#m4 = c(m3, men_syn[x,2])#
	mm=rbind(mm,m1)#
	mmm=rbind(mmm,m4)#
}#
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
#my=my[complete.cases(my),]#
#my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
mm = NULL#
mmm=NULL#
for(x in 1:length(m[,1])) {#
	m1 = mcon[mcon[,1]==m[x,1],2:3]#
	#m3 = con_syn[con_syn[,1]==m[x,1],2]#
	#m2 = c(m1, m[x,2])#
	#m4 = c(m3, men_syn[x,2])#
	mm=rbind(mm,m1)#
	mmm=rbind(mmm,m4)#
}#
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#
my=my[complete.cases(my),]#
#my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
#my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
#my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
plot(0)
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
#my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
#my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
#
plot((my[,1]+my[,2])/2, (my[,3]+my[,4])/2, ylim=c(0,1), xlim=c(0,1))#
#my[169,]#
matplot((my[169,1]+my[169,2])/2,(my[169,3]+my[169,4])/2, pch="+", col="red", add=T, cex=1.5)#
matplot((my[181,1]+my[181,2])/2,(my[181,3]+my[181,4])/2, pch="+", col="red", add=T, cex=1.5)
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
my[1,]
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
#my=my[complete.cases(my),]#
#my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
#my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.5 & my[,6]<0.5,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
#my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
my=my[complete.cases(my),]#
my=my[my[,5]<0.4 & my[,6]<0.4,]#
#
#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
my
plot(1:5,col=c(1"5"))
plot(1:5,col=c(1:5))
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.2 & ss <=1] = "blue"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.2 & ss <=1] = "blue"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
ss=(my1[,5]+my1[,6])/2
ss
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]), pch=20)#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]), pch=20)
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(jitter(my[,3]),jitter(my[,4]), main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(jitter(as.numeric(my[,3])),jitter(as.numeric(my[,4])), main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
plot(0)
plot(0)
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(jitter(as.numeric(my[,3])),jitter(as.numeric(my[,4])), main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1))
summary(my)
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))
summary(my)
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my2 = cbind(my,ss)
summary(my2)
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my[,1] = as.numeric(my[,1])
summary(my)
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my = my[my[,1]!="NA",]#
my = my[my[,2]!="NA",]#
#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
my
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my = my[my[,1]!="NaN",]#
my = my[my[,2]!="NaN",]#
#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(my[,3],my[,4], main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
#
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my = my[my[,1]!="NaN",]#
my = my[my[,2]!="NaN",]#
#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(jitter(as.numeric(my[,3])),jitter(as.numeric(my[,4])), main="Binary Count", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))
legend("bottomright", c(">0.5", ">0.4", ">0.3", ">0.2", ">0.1"), col=c("red", "orange", "yellow", "green", "blue"))
legend("bottomright", c(">0.5", ">0.4", ">0.3", ">0.2", ">0.1"), col=c("red", "orange", "yellow", "green", "blue"), pch=1)
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my = my[my[,1]!="NaN",]#
my = my[my[,2]!="NaN",]#
#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(jitter(as.numeric(my[,3])),jitter(as.numeric(my[,4])), main="Count (+jitter)", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
legend("bottomright", c(">0.5", ">0.4 & <=0.5", ">0.3 & <=0.4", ">0.2 & <=0.3", ">0.1 & <=0.2"), col=c("red", "orange", "yellow", "green", "blue"), pch=1)#
#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
#
legend("bottomright", c(">0.5", ">0.4 & <=0.5", ">0.3 & <=0.4", ">0.2 & <=0.3", ">0.1 & <=0.2"), col=c("red", "orange", "yellow", "green", "blue"), pch=1)
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my = my[my[,1]!="NaN",]#
my = my[my[,2]!="NaN",]#
#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(jitter(as.numeric(my[,3])),jitter(as.numeric(my[,4])), main="Count (+jitter)", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
legend("bottomright", c(">0.5", ">0.4 & <=0.5", ">0.3 & <=0.4", ">0.2 & <=0.3", ">0.1 & <=0.2"), col=c("red", "orange", "yellow", "green", "blue"), pch=1)#
#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
#
legend("bottomright", c(">0.5", ">0.4 & <0.5", ">0.3 & <0.4", ">0.2 & <0.3", ">0.1 & <0.2"), col=c("red", "orange", "yellow", "green", "blue"), pch=1)
my1 = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]), as.numeric(m[,4]), as.numeric(m[,5]))#
my = cbind(as.numeric(m[,2]), as.numeric(m[,3]),as.numeric(mm[,1]),as.numeric(mm[,2]))#
#
ss=(my1[,5]+my1[,6])/2#
ss[ss>0.5] = "red"#
ss[ss>0.4 & ss <=1] = "yellow"#
ss[ss>0.3 & ss <=1] = "orange"#
ss[ss>0.2 & ss <=1] = "green"#
ss[ss>0.1 & ss <=1] = "blue"#
ss[is.na(ss)] = "green"#
#
my = cbind(my,ss)#
my = my[my[,1]!="NaN",]#
my = my[my[,2]!="NaN",]#
#
my=my[complete.cases(my),]#
#
#cc = color.scale(my[,5], c(0,0,1),c(1,0,1),c(0,1,1),color.spec="rgb")#
plot(jitter(as.numeric(my[,3])),jitter(as.numeric(my[,4])), main="Count (+jitter)", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
legend("bottomright", c(">0.5", ">0.4 & <=0.5", ">0.3 & <=0.4", ">0.2 & <=0.3", ">0.1 & <=0.2"), col=c("red", "orange", "yellow", "green", "blue"), pch=1)#
#
plot(my[,1],my[,2], main="Bayesian", xlab="ArrayA", ylab="ArrayB", xlim=c(0,1), ylim=c(0,1), col=c(my[,5]))#
#
legend("bottomright", c(">0.5", ">0.4 & <=0.5", ">0.3 & <=0.4", ">0.2 & <=0.3", ">0.1 & <=0.2"), col=c("red", "orange", "yellow", "green", "blue"), pch=1)
set
detach(CNsolidate)
detach(CNsolidate::package)
detach(package::CNsolidate)
?detach
detach(package:CNsolidate)
library(CNsolidate)
overlap3
f1 = "F1_CD1209_US22502573_252152922647_FinalReport2.txt"
file = f1
report=file#
	report_status="PENDING"#
#
	u = unique(report[,1]); insertscript= vector(); pin = 1;
files = dir()#
#
for(x in 1:length(files)) {#
	d = read.table(files[x])#
	d[,1]=d[d[,1]==23,1] = "X"#
	d[,1]=d[d[,1]==24,1] = "Y"#
	d[,1] = paste("chr", d[,1], sep="")#
	write.table(d[,1:3], file=paste(substr(files[x], 1, nchar(files[x])-4), ".bed", sep=""), sep="\t", row.names=F, col.names=F, quote=F)#
	#
}
files = dir()#
files = files[grep("txt", files)]#
for(x in 1:length(files)) {#
	d = read.table(files[x])#
	d[,1]=d[d[,1]==23,1] = "X"#
	d[,1]=d[d[,1]==24,1] = "Y"#
	d[,1] = paste("chr", d[,1], sep="")#
	write.table(cbind(files[x], d[,1:3]), file=paste(substr(files[x], 1, nchar(files[x])-4), ".bed", sep=""), sep="\t", row.names=F, col.names=F, quote=F)#
	#
}
dir()
cbind(files[x], d[,1:3])
d
files = dir()#
files = files[grep("txt", files)]#
for(x in 1:length(files)) {#
	d = read.table(files[x])#
	d[,1]=d[d[,1]==23,1] = "X"#
	d[,1]=d[d[,1]==24,1] = "Y"#
	d[,1] = paste("chr", d[,1], sep="")#
	write.table(cbind(files[x], d[,1:3]), file=paste(substr(files[x], 1, nchar(files[x])-4), ".bed", sep=""), sep="\t", row.names=F, col.names=F, quote=F)#
	#
}
files
files
files[x]
d = read.table(files[1])
d
summary(d)
d[,1]=d[d[,1]==23,1] = "X"
summary(d)
unique(d[,1])
files = dir()#
#
for(x in 1:length(files)) {#
	d = read.table(files[x])#
	d[d[,1]==23,1] = "X"#
	d[d[,1]==24,1] = "Y"#
	d[,1] = paste("chr", d[,1], sep="")#
	write.table(d[,1:3], file=paste(substr(files[x], 1, nchar(files[x])-4), ".bed", sep=""), sep="\t", row.names=F, col.names=F, quote=F)#
	#
}
#files = dir()#
#
for(x in 1:length(files)) {#
	d = read.table(files[x])#
	d[d[,1]==23,1] = "X"#
	d[d[,1]==24,1] = "Y"#
	d[,1] = paste("chr", d[,1], sep="")#
	write.table(cbind(files[x], d[,1:3]), file=paste(substr(files[x], 1, nchar(files[x])-4), ".bed", sep=""), sep="\t", row.names=F, col.names=F, quote=F)#
	#
}
d = read.table("F1_CD1209_US22502573_252152922647_FinalReport2.txt")
data = d
length(d[,1])
hist(d[,4],200)
hist(d[,4],20)
hist(d[,4],200)
hist(d[,5],200)
plot(d[,4], d[,5])
d[which.max(d[,5]),]
newdata = cbind(data, gene_ids)
dir()
d = read.table("hg18_CompleteVariation.bed")
d
